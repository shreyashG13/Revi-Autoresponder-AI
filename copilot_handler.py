import os
import logging
import requests
from dotenv import load_dotenv

# Configure logging
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

# Load environment variables
load_dotenv()

# Set Azure Copilot API details
COPILOT_API_KEY = os.getenv("COPILOT_API_KEY")
COPILOT_ENDPOINT = os.getenv("COPILOT_ENDPOINT")  # Example: "https://copilot-api.microsoft.com/"

def get_copilot_response(query: str) -> str:
    """
    Get a response from Azure Copilot for a given query.

    Args:
        query (str): The user's query.

    Returns:
        str: The response generated by Azure Copilot.
    """
    try:
        logging.info(f"Sending query to Azure Copilot: {query}")

        headers = {
            "Authorization": f"Bearer {COPILOT_API_KEY}",
            "Content-Type": "application/json"
        }

        payload = {
            "messages": [
                {"role": "system", "content": "You are a helpful assistant."},
                {"role": "user", "content": query}
            ],
            "temperature": 0.7,
            "max_tokens": 300
        }

        response = requests.post(COPILOT_ENDPOINT, json=payload, headers=headers)
        response.raise_for_status()

        copilot_response = response.json()
        logging.info(f"Copilot response: {copilot_response}")

        return copilot_response["choices"][0]["message"]["content"]
    except requests.exceptions.RequestException as e:
        logging.error(f"Error interacting with Azure Copilot API: {e}")
        raise e
